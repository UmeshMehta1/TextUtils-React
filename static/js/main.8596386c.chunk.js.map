{"version":3,"sources":["component/Navbar.js","component/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","toUpperCase","newText2","toLowerCase","split","length","App","setMode","document","body","aboutText","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8596386c.chunk.js","sourcesContent":["import React from \"react\";\r\n// import PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n        {/* <Link className=\"navbar-brand\" to=\"#\"> */}\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> */}\r\n                Home\r\n              </a>\r\n              {/* <link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n             \r\n            </li> */}\r\n          </ul>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n// Navbar.PropTypes = {\r\n//     title: PropTypes.string,\r\n//     about: PropTypes.string}\r\n\r\n// Navbar.defaultProps = {\r\n//     title: 'hello Nepal',\r\n//     about: \"About Nepal\"\r\n// };\r\n","import React, { useState } from 'react';\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props){\r\n\r\n    const handleOnChange =(event) =>{\r\n        console.log(\"On Change\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleOnClick = () =>{\r\n        console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n    }\r\n\r\n    const handleOnClear = () =>{\r\n        console.log(\"Cleared\" + text);\r\n        let newText = '';\r\n        setText(newText)\r\n    }\r\n    // const handleOnCopy = () => {\r\n    //   alert(\"Copied\");\r\n    //   var text = document.getElementById(\"myBox\");\r\n    //        text.select();\r\n    //        nevigator.clipboard.writeText(text.value);\r\n    // };\r\n\r\n\r\n\r\n    const handleOn = () =>{\r\n        console.log(\"lowercase was clicked\" + text);\r\n        let newText2 = text.toLowerCase();\r\n        setText(newText2)\r\n    }\r\n    \r\n    // const handleCopy = () =>{\r\n    //     var text = document.getElementById(\"myBox\");\r\n    //     text.select();\r\n    //     nevigator.clipboard.writeText(text.value);\r\n    // }\r\n\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"new text\");\r\n\r\n    return(\r\n        <>\r\n        \r\n        <div className=\"container\" style={{color: props.mode===`dark`?`white`:`#042743`}}>\r\n            <h1>{props.heading}</h1>\r\n\r\n              <div className=\"mb-3\">\r\n                  \r\n                  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'gray':'white', color: props.mode==='dark'?'white':'#042743' }} id=\"myBox\" rows=\"8\"></textarea>\r\n                  <button className=\"btn btn-primary my-3\" onClick={handleOnClick}  > Convert Uppercase</button>\r\n                  <button className=\"btn btn-primary my-3 mx-3\" onClick={handleOn}  > Convert Lowercase</button>\r\n                  <button className=\"btn btn-primary my-3 mx-3\" onClick={handleOnClear}  >Clear</button>\r\n                  {/* <button className=\"btn btn-primary my-3 mx-3\" onClick={handleOnCopy}  >Copy</button> */}\r\n                  \r\n                 </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"container \" style={{color: props.mode===`dark`?`white`:`#042743`}}>\r\n            <h2>Your Text Summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.005* text.split(\" \").length} Minutes read</p>\r\n            <h2 className='my-2'>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in text box to preview it here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm'; \n// import About from './component/About';\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const toggleMode =() =>{\n    if (mode === \"light\") {    \n         setMode('dark')\n         document.body.style.backgroundColor = \"#042743 \";      \n    }\n    else{\n         setMode('light')  \n         document.body.style.backgroundColor = \"white\";    \n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"hello\" about=\"About Us\"/> */}\n      {/* <Navbar/>  */}\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n          aboutText=\"About\"\n        />\n        <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About />} />\n            <Route\n              exact\n              path=\"/\"\n              element={\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  mode={mode}\n                />\n              }\n            />\n          </Routes> */}\n          <TextForm heading=\"Enter the text to analyze below\" mode={mode} />\n        </div>\n      {/* </Router> */}\n      {/* <About/> */}\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}